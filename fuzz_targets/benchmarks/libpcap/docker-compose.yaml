services:
  afl-libpcap-main:
    image: libpcap_fuzz_ready
    privileged: true 
    container_name: "${COMPOSE_PROJECT_NAME:-default}-afl-libpcap"
    environment:
      CORPUS_DIR: /corpus
      OUTPUT_DIR: /afl-output
      FUZZER_ID: master
      # Optional override:
      # FUZZER_BIN: /out/custom_binary
      STACK_FRAMES: 3
      SHOW_GDB: "false"
    volumes:
      #- ./corpus:/corpus:rw
      #- ./corpus_min:/corpus_min:rw
      - ./out:/out:rw
      - ./corpus:/init_corpus:ro  
      - output-volume:/afl-output:rw
    tty: true
    stdin_open: true
    restart: "no"
  afl-libpcap-cov:
    image: libpcap_fuzz_ready_cov
    container_name: "${COMPOSE_PROJECT_NAME:-default}-afl-libpcap-cov"
    environment:
      CORPUS_DIR: /corpus
      OUTPUT_DIR: /out
      FUZZER_ID: master_cov
      # Optional override:
      FUZZER_BIN: /out/fuzz_both
    volumes:
      #- ./corpus:/corpus:rw
      #- ./corpus_min:/corpus_min:rw
      - ./out:/out:rw
      - ./corpus:/corpus:rw
      #- output-volume:/afl-output:rw
    tty: true
    stdin_open: true
    restart: "no"
  afl-libpcap-codeql:
    image: libpcap_fuzz_ready_codeql
    container_name: "${COMPOSE_PROJECT_NAME:-default}-afl-libpcap-codeql"
    environment:
      CORPUS_DIR: /corpus
      OUTPUT_DIR: /out
      FUZZER_ID: master_cov
      # Optional override:
      FUZZER_BIN: /out/fuzz_both
    volumes:
      #- ./corpus:/corpus:rw
      #- ./corpus_min:/corpus_min:rw
      - ./out:/out:rw
      - ./corpus:/corpus:rw
      #- output-volume:/afl-output:rw
    tty: true
    stdin_open: true
    restart: "no"
volumes:
  output-volume:

